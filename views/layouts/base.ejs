<!DOCTYPE html>
<html>
  <head>
    <title>Content Management</title>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <title ng-bind="title + ' | CM'">CM</title>

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/cm/styles/base.css">
    <link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!--STYLES END-->
  </head>

  <body>

      <!-- body -->
      <div class="container cm-body">
          <!--<div ng-view></div>-->
        <div ui-view></div>
      </div>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/bower_components/angular/angular.min.js"></script>
    <script src="/bower_components/angular-mocks/angular-mocks.js"></script>
    <script src="/bower_components/angular-ui-router/release/angular-ui-router.min.js"></script>
    <script src="/bower_components/angular-ui-router-styles/ui-router-styles.js"></script>
    <script src="/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
    <script src="/cm/js/cms.js"></script>
    <script src="/cm/js/utils/utils.js"></script>
    <script src="/cm/js/components/data/components.data.config.js"></script>
    <script src="/cm/js/components/data/components.data.js"></script>
    <script src="/cm/js/components/data/data-loader-cache-service.js"></script>
    <script src="/cm/js/components/data/data-loader-promise-service.js"></script>
    <script src="/cm/js/components/data/url-service.js"></script>
    <script src="/cm/js/components/articles/components.articles.js"></script>
    <script src="/cm/js/components/articles/article-controllers.js"></script>
    <script src="/cm/js/components/articles/article-service.js"></script>
    <script src="/cm/js/components/articles/article-widget-directive.js"></script>
    <script src="/cm/js/components/articles/components.articles.config.js"></script>
    <script src="/cm/js/components/security/components.security.js"></script>
    <script src="/cm/js/components/security/components.security.config.js"></script>
    <script src="/cm/js/components/security/authentication-storage-service.js"></script>
    <script src="/cm/js/components/security/token-storage-service.js"></script>
    <script src="/cm/js/components/security/token-auth-interceptor.js"></script>
    <script src="/cm/js/components/security/authentication-service.js"></script>
    <script src="/cm/js/components/security/authorization-service.js"></script>
    <script src="/cm/js/components/security/auth-controller.js"></script>
    <script src="/cm/js/app.js"></script>
    <script src="/cm/js/config.js"></script>
    <script src="/cm/js/bootstrap.js"></script>
    <script src="/cm/js/stateProvider.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
